<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- ORIGINAL SOURCE OF FILES - Modified for UW Aquadrone
     Copyright (c) 2016 The UUV Simulator Authors.
     All rights reserved.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

  <!-- https://github.com/uuvsimulator/uuv_simulator/wiki/Templates-to-create-a-new-thruster-actuated-vehicle-model -->


  <!-- Fluid density -->
  <xacro:property name="rho" value="1028"/>

  <!-- Describing the dimensions of the vehicle's bounding box -->
  <xacro:property name="length" value="0.9144"/>
  <xacro:property name="width"  value="0.3048"/>
  <xacro:property name="height" value="0.2"/>

  <xacro:property name="volume" value="${width * length * height}"/>
  <xacro:property name="mass" value="${width * length * height * rho}"/>

  <!-- Vehicle macro -->
  <xacro:macro name="aquadrone_base" params="debug cog cob">

    <!-- Rigid body description of the base link -->
    <link name="base_link">
      <inertial>
        <mass value="${mass}" />
        <origin xyz="${cog}" rpy="0 0 0"/>
        <inertia ixx="1" ixy="0" ixz="0"
                 iyy="1" iyz="0"
                 izz="1" />
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${length} ${width} ${height}"/>
        </geometry>
      </visual>

      <visual>
        <origin xyz="${length/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${width/2}"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${length} ${width} ${height}"/>
        </geometry>
      </collision>



    </link>

  <gazebo reference="base_link">
    <selfCollide>false</selfCollide>
  </gazebo>

    <!-- Set up hydrodynamic plugin -->
    <gazebo>
      <plugin name="uuv_plugin" filename="libuuv_underwater_object_plugin.so">
        <fluid_density>${rho}</fluid_density>
        <flow_velocity_topic>hydrodynamics/current_velocity</flow_velocity_topic>
        <debug>${debug}</debug>

        <link name="base_link">
          <!-- This flag will make the link neutrally buoyant -->
          
          <neutrally_buoyant>0</neutrally_buoyant>
          <center_of_buoyancy>${cob}</center_of_buoyancy>
          <volume>${volume*1.005}</volume>
          <box>
            <width>${width}</width>
            <length>${length}</length>
            <height>${height}</height>
          </box>
          

          <!-- Fossen's equation of motion -->
          <hydrodynamic_model>
            <type>fossen</type>
            <added_mass>
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
            </added_mass>
            <!--
            The linear damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
            -->
            <linear_damping>
              -3 -3 -3 -1 -1 -1
            </linear_damping>
            <!--
            The linear damping coefficients proportional to the forward speed
            can be provided as a diagonal (6 elements) or a full matrix (36 coefficients),
            like the added-mass coefficients above.
            This matrix is mostly useful for slender bodies (e.g. AUVs with torpedo shape)
            -->
            <linear_damping_forward_speed>
              0 0 0 0 0 0
            </linear_damping_forward_speed>
            <!--
            The quadratic damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
            -->
            <quadratic_damping>
              0 0 0 0 0 0
            </quadratic_damping>

          <!-- Link's bounding box, it is used to recalculate the immersed
          volume when close to the surface.
          This is a workaround the invalid bounding box given by Gazebo-->

          </hydrodynamic_model>

        </link>
      </plugin>


    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>/aquadrone/internal/sim_only/global_pos</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
    </gazebo>
  </xacro:macro>



  
</robot>